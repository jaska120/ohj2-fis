package fis.test;
// Generated by ComTest BEGIN
import java.util.Date;
import static org.junit.Assert.*;
import org.junit.*;
import fis.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.04.05 00:02:14 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class UrheilijaTest {



  // Generated by ComTest BEGIN
  /** 
   * testSet60 
   * @throws SailoException when error
   */
  @Test
  public void testSet60() throws SailoException {    // Urheilija: 60
    Urheilija urheilija = new Urheilija(); 
    assertEquals("From: Urheilija line: 63", null, urheilija.toString()); 
    assertEquals("From: Urheilija line: 64", 0, urheilija.getFiscode()); 
    String rivi = "278,13th FIS points list 2018/2019,1,AL,O,219656,502468,AABERG,Filip,SWE,M,2001-10-19,Nolby Alpina,SWE,AABERG Filip,2001,191.08,1587,+,66.57,1817,,77.99,2430,,131.07,2036,*,,,"; 
    urheilija.parse(rivi); 
    assertEquals("From: Urheilija line: 67", 502468, urheilija.getFiscode()); 
    assertEquals("From: Urheilija line: 68", "AABERG Filip", urheilija.toString()); 
    assertEquals("From: Urheilija line: 69", "278", urheilija.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGet178 
   * @throws SailoException when error
   */
  @Test
  public void testGet178() throws SailoException {    // Urheilija: 178
    Urheilija urheilija = new Urheilija(); 
    assertEquals("From: Urheilija line: 181", "0", urheilija.get(0)); 
    assertEquals("From: Urheilija line: 182", null, urheilija.get(1)); 
    String rivi = "278,13th FIS points list 2018/2019,1,AL,O,219656,502468,AABERG,Filip,SWE,M,2001-10-19,Nolby Alpina,SWE,AABERG Filip,2001,191.08,1587,+,66.57,1817,,77.99,2430,,131.07,2036,*,,,"; 
    urheilija.parse(rivi); 
    assertEquals("From: Urheilija line: 185", "278", urheilija.get(0)); 
    assertEquals("From: Urheilija line: 186", "13th FIS points list 2018/2019", urheilija.get(1)); 
    assertEquals("From: Urheilija line: 187", null, urheilija.get(100)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testParse265 
   * @throws SailoException when error
   */
  @Test
  public void testParse265() throws SailoException {    // Urheilija: 265
    Urheilija urheilija = new Urheilija(); 
    assertEquals("From: Urheilija line: 268", null, urheilija.toString()); 
    assertEquals("From: Urheilija line: 269", 0, urheilija.getFiscode()); 
    String rivi = "278,13th FIS points list 2018/2019,1,AL,O,219656,502468,AABERG,Filip,SWE,M,2001-10-19,Nolby Alpina,SWE,AABERG Filip,2001,191.08,1587,+,66.57,1817,,77.99,2430,,131.07,2036,*,,,"; 
    urheilija.parse(rivi); 
    assertEquals("From: Urheilija line: 272", 502468, urheilija.getFiscode()); 
    assertEquals("From: Urheilija line: 273", "AABERG Filip", urheilija.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetFiscode289 
   * @throws SailoException when error
   */
  @Test
  public void testGetFiscode289() throws SailoException {    // Urheilija: 289
    Urheilija urheilija = new Urheilija(); 
    assertEquals("From: Urheilija line: 292", null, urheilija.toString()); 
    assertEquals("From: Urheilija line: 293", 0, urheilija.getFiscode()); 
    String rivi = "278,13th FIS points list 2018/2019,1,AL,O,219656,502468,AABERG,Filip,SWE,M,2001-10-19,Nolby Alpina,SWE,AABERG Filip,2001,191.08,1587,+,66.57,1817,,77.99,2430,,131.07,2036,*,,,"; 
    urheilija.parse(rivi); 
    assertEquals("From: Urheilija line: 296", 502468, urheilija.getFiscode()); 
    assertEquals("From: Urheilija line: 297", "AABERG Filip", urheilija.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetCompetitorid307 
   * @throws SailoException when error
   */
  @Test
  public void testGetCompetitorid307() throws SailoException {    // Urheilija: 307
    Urheilija urheilija = new Urheilija(); 
    assertEquals("From: Urheilija line: 310", null, urheilija.toString()); 
    assertEquals("From: Urheilija line: 311", 0, urheilija.getCompetitorid()); 
    String rivi = "278,13th FIS points list 2018/2019,1,AL,O,219656,502468,AABERG,Filip,SWE,M,2001-10-19,Nolby Alpina,SWE,AABERG Filip,2001,191.08,1587,+,66.57,1817,,77.99,2430,,131.07,2036,*,,,"; 
    urheilija.parse(rivi); 
    assertEquals("From: Urheilija line: 314", 219656, urheilija.getCompetitorid()); 
    assertEquals("From: Urheilija line: 315", "AABERG Filip", urheilija.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetBirthDate326 
   * @throws SailoException when error
   */
  @Test
  public void testGetBirthDate326() throws SailoException {    // Urheilija: 326
    Urheilija urheilija = new Urheilija(); 
    assertEquals("From: Urheilija line: 330", null, urheilija.toString()); 
    assertEquals("From: Urheilija line: 331", 0, urheilija.getFiscode()); 
    String rivi = "278,13th FIS points list 2018/2019,1,AL,O,219656,502468,AABERG,Filip,SWE,M,2001-10-19,Nolby Alpina,SWE,AABERG Filip,2001,191.08,1587,+,66.57,1817,,77.99,2430,,131.07,2036,*,,,"; 
    urheilija.parse(rivi); 
    assertEquals("From: Urheilija line: 334", 502468, urheilija.getFiscode()); 
    assertEquals("From: Urheilija line: 335", "AABERG Filip", urheilija.toString()); 
    Date date = urheilija.getBirthDate(); 
    Date date2 = new Date(101, 9, 19); 
    assertEquals("From: Urheilija line: 338", true, date.equals(date2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testToString369 
   * @throws SailoException when error
   */
  @Test
  public void testToString369() throws SailoException {    // Urheilija: 369
    Urheilija urheilija = new Urheilija(); 
    assertEquals("From: Urheilija line: 372", null, urheilija.toString()); 
    assertEquals("From: Urheilija line: 373", 0, urheilija.getFiscode()); 
    String rivi = "278,13th FIS points list 2018/2019,1,AL,O,219656,502468,AABERG,Filip,SWE,M,2001-10-19,Nolby Alpina,SWE,AABERG Filip,2001,191.08,1587,+,66.57,1817,,77.99,2430,,131.07,2036,*,,,"; 
    urheilija.parse(rivi); 
    assertEquals("From: Urheilija line: 376", 502468, urheilija.getFiscode()); 
    assertEquals("From: Urheilija line: 377", "AABERG Filip", urheilija.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEquals391 
   * @throws SailoException when error
   */
  @Test
  public void testEquals391() throws SailoException {    // Urheilija: 391
    int code = 123; 
    int code2 = 456; 
    int code3 = 9948; 
    Urheilija urheilija = new Urheilija(); 
    String rivi = "278,13th FIS points list 2018/2019,1,AL,O,219656,"+code+",AABERG,Filip,SWE,M,2001-10-19,Nolby Alpina,SWE,AABERG Filip,2001,191.08,1587,+,66.57,1817,,77.99,2430,,131.07,2036,*,,,"; 
    urheilija.parse(rivi); 
    Urheilija urheilija2 = new Urheilija(); 
    rivi = "278,13th FIS points list 2018/2019,1,AL,O,219656,"+code2+",AABERG,Filip,SWE,M,2001-10-19,Nolby Alpina,SWE,AABERG Filip,2001,191.08,1587,+,66.57,1817,,77.99,2430,,131.07,2036,*,,,"; 
    urheilija2.parse(rivi); 
    Urheilija urheilija3 = new Urheilija(); 
    rivi = "278,13th FIS points list 2018/2019,1,AL,O,219656,"+code3+",AABERG,Filip,SWE,M,2001-10-19,Nolby Alpina,SWE,AABERG Filip,2001,191.08,1587,+,66.57,1817,,77.99,2430,,131.07,2036,*,,,"; 
    urheilija3.parse(rivi); 
    assertEquals("From: Urheilija line: 405", false, urheilija.equals(urheilija2)); 
    assertEquals("From: Urheilija line: 406", false, urheilija.equals(urheilija3)); 
    assertEquals("From: Urheilija line: 407", false, urheilija2.equals(urheilija3)); 
    assertEquals("From: Urheilija line: 408", true, urheilija.equals(urheilija)); 
  } // Generated by ComTest END
}