package fis.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import fis.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.04.04 23:53:48 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TulosTest {



  // Generated by ComTest BEGIN
  /** 
   * testGetKenttaOtsakkeetArvo85 
   * @throws SailoException when error
   */
  @Test
  public void testGetKenttaOtsakkeetArvo85() throws SailoException {    // Tulos: 85
    Tulos tulos = new Tulos(); 
    assertEquals("From: Tulos line: 88", null, tulos.getKenttaOtsakkeetArvo(1)); 
    tulos.taytaMalliDatalla(); 
    String random = "random"; 
    tulos.set(3, random); 
    tulos.getKenttaOtsakkeetArvo(1).equals(random); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetId116 */
  @Test
  public void testGetId116() {    // Tulos: 116
    Tulos tulos = new Tulos(); 
    assertEquals("From: Tulos line: 118", 0, tulos.getId()); 
    tulos.setId(); 
    assertEquals("From: Tulos line: 120", false, tulos.getId() == 0); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetId132 */
  @Test
  public void testSetId132() {    // Tulos: 132
    Tulos tulos = new Tulos(); 
    assertEquals("From: Tulos line: 134", 0, tulos.getId()); 
    tulos.setId(); 
    assertEquals("From: Tulos line: 136", false, tulos.getId() == 0); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetId148 */
  @Test
  public void testSetId148() {    // Tulos: 148
    Tulos tulos = new Tulos(); 
    assertEquals("From: Tulos line: 150", 0, tulos.getId()); 
    tulos.setId(); 
    assertEquals("From: Tulos line: 152", false, tulos.getId() == 0); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetFiscode165 */
  @Test
  public void testGetFiscode165() {    // Tulos: 165
    Tulos tulos = new Tulos(); 
    assertEquals("From: Tulos line: 167", 0, tulos.getFiscode()); 
    tulos.taytaMalliDatalla(); 
    assertEquals("From: Tulos line: 169", false, tulos.getFiscode() == 0); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetFiscode181 */
  @Test
  public void testSetFiscode181() {    // Tulos: 181
    int fiscode = 123; 
    Tulos tulos = new Tulos(); 
    assertEquals("From: Tulos line: 184", 0, tulos.getFiscode()); 
    tulos.taytaMalliDatalla(); 
    assertEquals("From: Tulos line: 186", false, fiscode == tulos.getFiscode()); 
    tulos.setFiscode(fiscode); 
    assertEquals("From: Tulos line: 188", true, tulos.getFiscode() == fiscode); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testSet202 
   * @throws SailoException when error
   */
  @Test
  public void testSet202() throws SailoException {    // Tulos: 202
    Tulos tulos = new Tulos(); 
    assertEquals("From: Tulos line: 205", true, tulos.getKenttaOtsakkeetArvo(3).equals("0")); 
    tulos.set(5, "10"); 
    assertEquals("From: Tulos line: 207", true, tulos.getKenttaOtsakkeetArvo(3).equals("10")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals244 */
  @Test
  public void testEquals244() {    // Tulos: 244
    Tulos tulos = new Tulos(); 
    tulos.setId(); 
    Tulos tulos2 = new Tulos(); 
    tulos2.setId(); 
    Tulos tulos3 = new Tulos(); 
    tulos3.setId(); 
    assertEquals("From: Tulos line: 251", false, tulos.equals(tulos2)); 
    assertEquals("From: Tulos line: 252", false, tulos.equals(tulos3)); 
    assertEquals("From: Tulos line: 253", false, tulos2.equals(tulos3)); 
    assertEquals("From: Tulos line: 254", true, tulos.equals(tulos)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testParse284 
   * @throws SailoException when error
   */
  @Test
  public void testParse284() throws SailoException {    // Tulos: 284
    Tulos tulos = new Tulos(); 
    assertEquals("From: Tulos line: 287", true, tulos.getFiscode() == 0); 
    tulos.parse("1,120097,01.01.2019,Levi,GS,1,21.65"); 
    assertEquals("From: Tulos line: 289", false, tulos.getFiscode() == 0); 
    assertEquals("From: Tulos line: 290", true, tulos.getFiscode() == 120097); 
    try {
    tulos.parse("ak,12,--,2"); 
    fail("Tulos: 291 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testToString308 
   * @throws SailoException when error
   */
  @Test
  public void testToString308() throws SailoException {    // Tulos: 308
    Tulos tulos = new Tulos(); 
    String line2 = "2,120097,02.01.2019,Pyh√§,GS,14,28.11"; 
    tulos.parse(line2); 
    tulos.toString().equals(line2); 
    String line = "1,120097,01.01.2019,Levi,GS,1,21.65"; 
    tulos.parse(line); 
    tulos.toString().equals(line); 
  } // Generated by ComTest END
}