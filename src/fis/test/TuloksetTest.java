package fis.test;
// Generated by ComTest BEGIN
import java.io.IOException;
import fi.jyu.mit.ohj2.VertaaTiedosto;
import fis.Tulos;
import java.util.List;
import static org.junit.Assert.*;
import org.junit.*;
import fis.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.04.05 00:39:09 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TuloksetTest {



  // Generated by ComTest BEGIN
  /** 
   * testGetLkm43 
   * @throws SailoException when error
   */
  @Test
  public void testGetLkm43() throws SailoException {    // Tulokset: 43
    Tulokset tulokset = new Tulokset(); 
    assertEquals("From: Tulokset line: 46", 0, tulokset.getLkm()); 
    tulokset.lisaa(new Tulos()); 
    assertEquals("From: Tulokset line: 48", 1, tulokset.getLkm()); 
    tulokset.lisaa(new Tulos()); 
    assertEquals("From: Tulokset line: 50", 2, tulokset.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetLkm63 
   * @throws SailoException when error
   */
  @Test
  public void testGetLkm63() throws SailoException {    // Tulokset: 63
    Tulokset tulokset = new Tulokset(); 
    assertEquals("From: Tulokset line: 66", 0, tulokset.getLkm(1)); 
    Tulos tulos = new Tulos(); 
    tulos.setFiscode(1); 
    Tulos tulos2 = new Tulos(); 
    tulos2.setFiscode(2); 
    tulokset.lisaa(tulos); 
    tulokset.lisaa(tulos2); 
    assertEquals("From: Tulokset line: 73", 1, tulokset.getLkm(2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetList89 
   * @throws SailoException when error
   */
  @Test
  public void testGetList89() throws SailoException {    // Tulokset: 89
    int y = 5; 
    Tulokset tulokset = new Tulokset(); 
    assertEquals("From: Tulokset line: 93", 0, tulokset.getList().size()); 
    for (int i = 0; i < y; i++) {
    tulokset.lisaa(new Tulos()); 
    }
    assertEquals("From: Tulokset line: 97", y, tulokset.getList().size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetList115 
   * @throws SailoException when error
   */
  @Test
  public void testGetList115() throws SailoException {    // Tulokset: 115
    Tulokset tulokset = new Tulokset(); 
    assertEquals("From: Tulokset line: 118", 0, tulokset.getList(0).size()); 
    Tulos tulos = new Tulos(); 
    tulos.setFiscode(1); 
    Tulos tulos2 = new Tulos(); 
    tulos2.setFiscode(2); 
    Tulos tulos3 = new Tulos(); 
    tulos3.setFiscode(2); 
    tulokset.lisaa(tulos); 
    tulokset.lisaa(tulos2); 
    tulokset.lisaa(tulos3); 
    assertEquals("From: Tulokset line: 128", 1, tulokset.getList(1).size()); 
    assertEquals("From: Tulokset line: 129", 2, tulokset.getList(2).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa145 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa145() throws SailoException {    // Tulokset: 145
    Tulokset tulokset = new Tulokset(); 
    int max = tulokset.getTuloksiaInkrementti() + 7; 
    for (int i = 0; i <= max; i++) {
    Tulos tulos = new Tulos(); 
    tulos.taytaMalliDatalla(); 
    tulokset.lisaa(tulos); 
    }
    assertEquals("From: Tulokset line: 154", true, tulokset.getLkm() > tulokset.getTuloksiaInkrementti()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista176 */
  @Test
  public void testPoista176() {    // Tulokset: 176
    int y = 5; 
    Tulos tulos = new Tulos(); 
    Tulokset tulokset = new Tulokset(); 
    assertEquals("From: Tulokset line: 180", 0, tulokset.getList().size()); 
    tulokset.lisaa(tulos); 
    for (int i = 0; i < y; i++) {
    tulokset.lisaa(new Tulos()); 
    }
    assertEquals("From: Tulokset line: 185", y+1, tulokset.getLkm()); 
    tulokset.poista(tulos); 
    assertEquals("From: Tulokset line: 187", y, tulokset.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta209 
   * @throws IOException when error
   */
  @Test
  public void testLueTiedostosta209() throws IOException {    // Tulokset: 209
    String tiedosto = "testiTulokset.csv"; 
    String otsake = "comma,separated,value"; 
    Tulokset tulokset = new Tulokset(); 
    VertaaTiedosto.kirjoitaTiedosto(tiedosto,
    otsake + "\n" +
    "1,120097,01.01.2019,Levi,GS,1,21.65\n" +
    "2,120097,02.01.2019,Pyhä,GS,14,28.11\n" +
    "3,123456,07.01.2019,Tahko,SL,26,39.12\n"); 
    assertEquals("From: Tulokset line: 222", 0, tulokset.getLkm()); 
    tulokset.lueTiedostosta(tulokset, Tulos.class, tiedosto, otsake); 
    assertEquals("From: Tulokset line: 224", 3, tulokset.getLkm()); 
    assertEquals("From: Tulokset line: 225", 1, tulokset.getLkm(123456)); 
    VertaaTiedosto.tuhoaTiedosto(tiedosto); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTallennaTiedostoon238 
   * @throws IOException when error
   * @throws SailoException when error
   */
  @Test
  public void testTallennaTiedostoon238() throws IOException, SailoException {    // Tulokset: 238
    String tiedosto = "testiTulokset.csv"; 
    String tiedosto2 = "testiTuloksetTallennettu.csv"; 
    String otsake = "comma,separated,value"; 
    Tulokset tulokset = new Tulokset(); 
    VertaaTiedosto.kirjoitaTiedosto(tiedosto,
    otsake + "\n" +
    "1,120097,01.01.2019,Levi,GS,1,21.65\n" +
    "2,120097,02.01.2019,Pyhä,GS,14,28.11\n" +
    "3,123456,07.01.2019,Tahko,SL,26,39.12\n"); 
    assertEquals("From: Tulokset line: 253", 0, tulokset.getLkm()); 
    tulokset.lueTiedostosta(tulokset, Tulos.class, tiedosto, otsake); 
    assertEquals("From: Tulokset line: 255", 3, tulokset.getLkm()); 
    List<Tulos> lista = tulokset.getList(123456); 
    assertEquals("From: Tulokset line: 257", 1, lista.size()); 
    tulokset.poista(lista.get(0)); 
    assertEquals("From: Tulokset line: 259", 2, tulokset.getLkm()); 
    tulokset.tallennaTiedostoon(tulokset, tiedosto2, "testiTuloksetTemp.csv", otsake); 
    String tulos =
    otsake + "\n" +
    "1,120097,01.01.2019,Levi,GS,1,21.65\n" +
    "2,120097,02.01.2019,Pyhä,GS,14,28.11\n"; 
    assertEquals("From: Tulokset line: 265", null, VertaaTiedosto.vertaaFileString(tiedosto2, tulos)); 
    VertaaTiedosto.tuhoaTiedosto(tiedosto); 
    VertaaTiedosto.tuhoaTiedosto(tiedosto2); 
  } // Generated by ComTest END
}